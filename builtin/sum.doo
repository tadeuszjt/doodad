module sum

import builtin/builtin
import builtin/convert
import builtin/compare


inst{A} copy{ Sum{A} } (a)
    let b
    b.0 = a.0
    return b

inst{A, B} copy{ Sum{A, B} } (a)
    let b
    let en = a.builtinSumEnum
    b.builtinSumReset(en)

    switch en
        0; b.0 = a.0
        1; b.1 = a.1

    return b


inst{A, B, C} copy{ Sum{A, B, C} } (a)
    let b
    let en = a.builtinSumEnum
    b.builtinSumReset(en)

    switch en
        0; b.0 = a.0
        1; b.1 = a.1
        2; b.2 = a.2

    return b


inst{A, B, C, D} copy{ Sum{A, B, C, D} } (a)
    let b
    let en = a.builtinSumEnum
    b.builtinSumReset(en)

    switch en
        0; b.0 = a.0
        1; b.1 = a.1
        2; b.2 = a.2
        3; b.3 = a.3

    return b


inst{A, B, C, D, E} copy{ Sum{A, B, C, D, E} } (a)
    let b
    let en = a.builtinSumEnum
    b.builtinSumReset(en)

    switch en
        0; b.0 = a.0
        1; b.1 = a.1
        2; b.2 = a.2
        3; b.3 = a.3
        4; b.4 = a.4

    return b


inst{A, B, C, D, E, F} copy{ Sum{A, B, C, D, E, F} } (a)
    let b
    let en = a.builtinSumEnum
    b.builtinSumReset(en)

    switch en
        0; b.0 = a.0
        1; b.1 = a.1
        2; b.2 = a.2
        3; b.3 = a.3
        4; b.4 = a.4
        5; b.5 = a.5

    return b


inst{A, B, C, D, E, F, G} copy{ Sum{A, B, C, D, E, F, G} } (a)
    let b
    let en = a.builtinSumEnum
    b.builtinSumReset(en)

    switch en
        0; b.0 = a.0
        1; b.1 = a.1
        2; b.2 = a.2
        3; b.3 = a.3
        4; b.4 = a.4
        5; b.5 = a.5
        6; b.6 = a.6

    return b


inst{A, B, C, D, E, F, G, H} copy{ Sum{A, B, C, D, E, F, G, H} } (a)
    let b
    let en = a.builtinSumEnum
    b.builtinSumReset(en)

    switch en
        0; b.0 = a.0
        1; b.1 = a.1
        2; b.2 = a.2
        3; b.3 = a.3
        4; b.4 = a.4
        5; b.5 = a.5
        6; b.6 = a.6
        7; b.7 = a.7

    return b


inst{A, B, C, D, E, F, G, H, I} copy{ Sum{A, B, C, D, E, F, G, H, I} } (a)
    let b
    let en = a.builtinSumEnum
    b.builtinSumReset(en)

    switch en
        0; b.0 = a.0
        1; b.1 = a.1
        2; b.2 = a.2
        3; b.3 = a.3
        4; b.4 = a.4
        5; b.5 = a.5
        6; b.6 = a.6
        7; b.7 = a.7
        8; b.8 = a.8

    return b
