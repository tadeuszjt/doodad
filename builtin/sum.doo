module sum

import builtin/builtin
import builtin/convert



inst{A} copy{ Sum{A} } (a)
    let b
    b.0 = a.0
    return b

inst{A, B} copy{ Sum{A, B} } (a)
    let b
    let en = a.builtinSumEnum
    b.builtinSumReset(en)

    if builtin::builtinEqual(en, 0)
        b.0 = a.0
    else if builtin::builtinEqual(en, 1)
        b.1 = a.1

    return b


inst{A, B, C} copy{ Sum{A, B, C} } (a)
    let b
    let en = a.builtinSumEnum
    b.builtinSumReset(en)

    if builtin::builtinEqual(en, 0)
        b.0 = a.0
    else if builtin::builtinEqual(en, 1)
        b.1 = a.1
    else if builtin::builtinEqual(en, 2)
        b.2 = a.2

    return b
