module testLang

import ../../std/io


fn testPatArrayMatch()
    data table [i64; bool]
    table.push(1, true)
    table.push(2, false)

    let [1, 2; true, false] = table
    if table -> [1, 2, _; true, false, _]; let true = false


fn testExprArray()
    let array = [1, 2, 3, 4]
    let 3 = array[2]
    let [1, 2, 3, 4] = array
    array[1] = 6
    let [1, 6, 3, 4] = array


fn testWriteI64()
    data s string


fn {io Io} testKeys()
    data strings sparse[string]
    let key1:@string = strings.push("string1")
    let key2:@string = strings.push("string2")

    let "string1" = strings[key1]
    let "string2" = strings[key2]
    strings.delete(key1)
    let "" = strings[key1]


fn {io Io} main()
    testPatArrayMatch()
    testExprArray()
    testWriteI64()
    io.testKeys()
    io.write("testLang passed\n")
