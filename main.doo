module main

import std/assert

type[T] Maybe (null | T)

fn[T] {m:Maybe(T)} isNull() bool
    switch m
        null; return true
        _   ; return false

fn[T] {m:Maybe(T)} fromJust() T
    switch m
        null; assert(false)
        .T[x]; return x


fn main()
    let x = conv(4):Maybe(i64)
    print(x.isNull(), x.fromJust())


    print("main")



