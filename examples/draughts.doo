module draughts

import ../std/io
import ../std/strings


type Square { Empty() | White() | Black() }
type Board [8 [8 Square]]


fn (board Board) Print()
    for board[..] -> r
        putChar('0' + len(board) - char(r))
        putStr(" [")
        let comma = board[r][..len(board[r])-1]
        for board[r][..] -> c
            switch board[r][c]
                Empty(); putChar(' ')
                White(); putChar('W')
                Black(); putChar('B')
            if comma[c]; putChar(',') 
        putStrLn("]")
    putStrLn("   A B C D E F G H")


fn (board Board) Initialise()
    for board[..3] -> r
        let c = 0
        if r % 2 == 0; c = 1
        while board[r][..][c]
            board[r][c] = White()
            c = c + 2

    for board[len(board)-3..] -> r
        let c = 0
        if r % 2 == 0; c = 1
        while board[r][..][c]
            board[r][c] = Black()
            c = c + 2


fn playerMove()
    print("Enter move. Eg: E2 E4")
    data line String
    line.GetStrLn()

    let (startRow, n1) = line.ReadChar(0)
    let (startCol, n2) = line.ReadI64(n1)
    let (endRow, n3)   = line.ReadChar(n1 + n2)
    let (endCol, n4)   = line.ReadI64(n1 + n2 + n3)
    if n1 == 0 || n2 == 0 || n3 == 0 || n4 == 0
        print("invalid move")
        return

    print(startRow, startCol, endRow, endCol)

    return


fn main()
    data board Board
    board.Initialise()
    board.Print()
    playerMove()
    board.Print()
