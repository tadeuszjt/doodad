module test

import std/assert

fn test(b bool)
    if b; print("pass")
    else; print("fail")

fn main()
    test(1 + 1 == 2)
    test(34 - 12 == 22)
    test(3 * 4 == 12)

    test([123] == [123])
    test([(1, 2)] == [(1, 2)])
    test([(1, 3)] != [(1, 2)])
    test([(1, "abc")] == [(1, "abc")])
    test([(1, "abd")] != [(1, "abc")])
    test([(1, "abc")] != [(1, "abcd")])
    test([(1, "abc")] != [(1, "abc"), (2, "benis")])
    test([(1, "abc"), (2, "benis")] == [(1, "abc"), (2, "benis")])

    test( (1, 2).0 == 1 )
    test( (23, 43.21).1 == 43.21 )
    test( ('c', 123, false) == ('c', 123, false) )
    test( ('c', 123, false) != ('c', 123, true) )
    type Struct ( a i64, b bool, c (i64, i64)) 
    test( (1, false, (0, 2)):Struct.b == false )
