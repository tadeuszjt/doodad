module store

import std/builtin
import std/assert
import std/compare


feature{T} store(T, T)


acquires store{ I64 }  (a&, b); builtinStore(&a, b)
acquires store{ F64 }  (a&, b); builtinStore(&a, b)
acquires store{ Bool } (a&, b); builtinStore(&a, b)
acquires store{ Char } (a&, b); builtinStore(&a, b)


acquires store{ Tuple{} } (a&, b)
    return

acquires{A, B} store{ Tuple{A, B} } (a&, b)
    a.0 = b.0
    a.1 = b.1

acquires{A, B} store{ Sum{A, B} } (a&, b)
    let en = b.builtinSumEnum
    a.builtinSumReset(en)
    switch en
        0; a.0 = b.0
        1; a.1 = b.1

