module strings
import chars
import io

type StringKey i64
type String [char]
type Strings [String]

data strings Strings


fn (ss Strings) New(s string) StringKey
    let key = ss.New()
    for [i] s
        ss[key].push(s[i])
    return key


fn (ss Strings) New() StringKey
    return ss.push()


fn (ss Strings) Delete(key StringKey)
    if key == len(ss) - 1; ss.pop()
    else;                  ss[key].clear()


fn (ss Strings) Append(key StringKey, c char)
    ss[key].push(c)


fn (ss Strings) Append(key StringKey, s string)
    for [i] s
        ss[key].push(s[i])


fn (ss Strings) Append(key StringKey, key2 StringKey)
    for [i] ss[key2]
        ss[key].push(ss[key2][i])


fn (ss Strings) Print(key StringKey)
    print(ss[key])


fn (ss Strings) GetStrLn()
    let s = strings.New()
    while true
        switch getChar()
            '\n'; return s
            '\0'; return s
            c; ss.Append(s, c)


