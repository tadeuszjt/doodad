module strings
import chars
import io

type String [char]
type Strings sparse[String]
data strings Strings



fn (ss Strings) Append(k1 i64, k2 i64)
    for [i] ss[k2]; ss[k1].push(ss[k2][i])


fn (s String) Append(str string)
    for [i] str; s.push(str[i])


fn (s String) PutStrLn()
    print(s)


fn (s String) GetStrLn()
    s.clear()
    while true
        switch getChar()
            '\n'; return
            '\0'; return
            c; s.push(c)


fn (s String) ReadChar(start i64) (char, i64)
    let i = start
    while i < len(s) && isSpace(s[i])
        i = i + 1

    if i < len(s) && isAlpha(s[i])
          return (s[i], 1)
    else; return ('\0', 0)


fn (s String) ReadI64(start i64) (i64, i64)
    let i = start
    while i < len(s) && isSpace(s[i])
        i = i + 1

    let n = 0
    while i < len(s) && isDigit(s[i])
        n = n*10 + i64(s[i] - '0')
        i = i + 1

    return (n, i)
        
    
