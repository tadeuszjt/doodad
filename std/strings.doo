module strings
import chars
import io

type String [char]
type Strings sparse[String]
data strings Strings



fn (ss Strings) Append(k1 i64, k2 i64)
    for [i] ss[k2]; ss[k1].push(ss[k2][i])


fn (s String) Append(str string)
    for [i] str; s.push(str[i])


fn (s String) Print()
    print(s)


fn (s String) ReadI64() (i64, i64)
    let i = 0
    for [j] s -> c | isSpace(c)
        i = i + 1

    let n = 0
    while i < len(s) && isDigit(s[i])
        n = n*10 + i64(s[i] - '0')

    return (n, i)
        
    
