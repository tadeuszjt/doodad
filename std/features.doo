module features

feature Arithmetic{T}
    fn add(T, T) T
    fn subtract(T, T) T
    fn times(T, T) T
    fn divide(T, T) T
    fn modulo(T, T) T
    fn subtract(T) T


feature Boolean{T}
    fn and(T, T) T
    fn or(T, T) T
    fn not(T) T


feature Compare{T}
    fn greater(T, T) Bool
    fn less(T, T) Bool
    fn equal(T, T) Bool


feature Len{T}
    fn len(T) I64


feature At{T}
    fn{K, V} at(T, K) V


feature Construct{T}
    fn{A}       construct(A) T
    fn{A, B}    construct(A, B) T
    fn{A, B, C} construct(A, B, C) T


feature Store{T}
    fn{G} store(T, G)


feature For{T}
    fn    begin(T) I64
    fn    end(T) I64
    fn{G} at(T, I64) G
