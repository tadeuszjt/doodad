module strings

import chars

fn + (a string, b string) string
    let r = copy(a)
    r <- copy(b)
    return r


fn == (a string, b string) bool
    if len(a) != len(b)
        return false

    let i = 0
    while i < len(a)
        if a[i] != b[i]
            return false
        i = i + 1

    return true


fn string(b bool)
    if b; return "true"
    else; return "false"


fn isPrefix(pre string, str string) bool
    if len(pre) > len(str)
        return false

    let i = 0
    while i < len(str) && i < len(pre)
        if pre[i] != str[i]
            return false
        i = i + 1

    return true


fn readInt(s string) (i64, bool)
    let n = 0
    let b = false

    let i = 0
    while i < len(s) && isDigit(s[i])
        n = n*10 + i64(s[i] - '0')
        b = true
        i = i + 1

    return (n, b)


fn reverse(s string)
    let r = copy(s)
    let i = 0
    while i < len(r)
        r[i] = s[len(s) - 1 - i]
        i = i + 1

    return r

