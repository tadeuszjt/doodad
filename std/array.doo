module array

import std/integer
import std/features


fn{T, S} At::at(array &Array{T, S}, index I64) &T
    return builtin_array_at(&array, index)


fn{T, S} Len::len(array &Array{T, S}) I64
    let len
    ${ $len = sizeof($array->arr) / sizeof($array->arr[0]); }
    return len


fn{T} Store::store(a &T.Array{4}, b T.Array{4})
    a[0] = b[0]
    a[1] = b[1]
    a[2] = b[2]
    a[3] = b[3]

fn{T} Store::store(a &T.Array{3}, b T.Array{3})
    a[0] = b[0]
    a[1] = b[1]
    a[2] = b[2]
