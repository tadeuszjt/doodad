module rand

import std/store
import std/assert
import std/arithmetic
import std/compare


include <stdlib.h>
include <time.h>
include <math.h>
link m

type Rand Tuple{I64}


fn i64(r &Rand, min I64, max I64) I64
    let n = r.0
    ${ srand($n); }
    ${ $n = rand(); }
    r.0 = n
    return (r.0 % (max - min)) + min


fn f64(rand &Rand, min F64, max F64) F64
    if min == max
        return min

    let x
    ${
        double d = (double)rand() / RAND_MAX;
        $x = d * ($max - $min) + $min;
    }
    return x


fn f32(rand &Rand, min F32, max F32) F32
    if min == max
        return min

    let x
    ${
        double d = (double)rand() / RAND_MAX;
        $x = (float)d * ($max - $min) + $min;
    }
    return x
