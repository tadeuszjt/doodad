module rand

import builtin/all

include <stdlib.h>
include <time.h>
include <math.h>
link m

type Rand I64

derives Rand (destroy)

func{T} uniform(Rand, T, T) T


inst uniform{U8} (rand&, min, max); return uniform{I64}(rand, min.convert, max.convert).convert


inst uniform{I64} (rand&, min, max)
    if max == min
        return min
    let i64  = 0
    ${
        $i64 = rand();
    }
    return i64 % (max - min) + min


inst uniform{F32} (rand&, min, max)
    return uniform{F64}(rand, min.convert, max.convert).convert
inst uniform{F64} (rand&, min, max)
    if max == min
        return min
    let f64
    ${
        $f64 = (double)rand() / RAND_MAX;
    }
    return f64 * (max - min) + min
