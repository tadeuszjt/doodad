module testStrings

import ../strings

fn testBuiltin()
    data s1 string
    data s2 string
    let true = s1 == s2
    {s1, "abStr987!.<?\n"}.write()
    let false = s1 == s2
    {s2, "abStr987!.<?\n"}.write()
    let true = s1 == s2
    s1.push(' ')
    let false = s1 == s2
    s1.push('_')
    let false = s1 == s2


fn testFind()
    data s string "abunch,of.chars!?!\n"
    let i64(0) = s.find('a')
    let null = s.find('x')
    let i64(6) = s.find(',')
    let i64(18) = s.find('\n')
    let null = {s, ">"}.find()
    let i64(0) = {s, ""}.find()
    let null = {s, "abunch?"}.find()
    let i64(0) = {s, "abunch,"}.find()
    let null = {s, ",Of."}.find()
    let i64(6) = {s, ",of."}.find()
    let null = {s, "!?!?"}.find()
    let i64(15) = {s, "!?!\n"}.find()


fn testWrite()
    data s string
    s.write('a')
    s.write(false)
    s.write(0)
    {s, ".str!"}.write()
    s.write(-123)
    let true = s == "afalse0.str!-123"


fn testRead()
    data s string
    let ('\0', 0) = s.read(0)
    {s, "abc123!?.-945"}.write()
    let ('a', 1) = s.read(0)
    let (123, 3) = s.read(3)
    let (0, 0) = s.read(6)
    s.clear()
    {s, "x   123!?.-945"}.write()
    let (123, 6) = s.read(1)


fn testStrings()
    testBuiltin()
    testFind()
    testWrite()
    testRead()
    print("testStrings passed")
