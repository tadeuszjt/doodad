module bool

import std/features
import std/builtin

fn Compare::equal(a Bool, b Bool) Bool
    let c : Bool
    ${ $c = $a == $b; }
    return c


fn Store::store(a &Bool, b Bool); builtin::store(&a, b)


fn Construct::construct(a Bool) Bool
    let b : Bool
    ${ $b = $a; }
    return b


fn Boolean::and(a Bool, b Bool) Bool
    let c : Bool
    ${ $c = $a && $b; }
    return c

fn Boolean::or(a Bool, b Bool) Bool
    let c : Bool
    ${ $c = $a || $b; }
    return c

fn Boolean::not(a Bool) Bool
    let c : Bool
    ${ $c = $a ? 0 : 1; }
    return c
